// Code generated by MockGen. DO NOT EDIT.
// Source: user_service_interface.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserServiceInterface is a mock of UserServiceInterface interface.
type MockUserServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUserServiceInterfaceMockRecorder
}

// MockUserServiceInterfaceMockRecorder is the mock recorder for MockUserServiceInterface.
type MockUserServiceInterfaceMockRecorder struct {
	mock *MockUserServiceInterface
}

// NewMockUserServiceInterface creates a new mock instance.
func NewMockUserServiceInterface(ctrl *gomock.Controller) *MockUserServiceInterface {
	mock := &MockUserServiceInterface{ctrl: ctrl}
	mock.recorder = &MockUserServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserServiceInterface) EXPECT() *MockUserServiceInterfaceMockRecorder {
	return m.recorder
}

// AddShortURLsToUser mocks base method.
func (m *MockUserServiceInterface) AddShortURLsToUser(userID string, shortURLs []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddShortURLsToUser", userID, shortURLs)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddShortURLsToUser indicates an expected call of AddShortURLsToUser.
func (mr *MockUserServiceInterfaceMockRecorder) AddShortURLsToUser(userID, shortURLs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddShortURLsToUser", reflect.TypeOf((*MockUserServiceInterface)(nil).AddShortURLsToUser), userID, shortURLs)
}

// GetUserShortURLs mocks base method.
func (m *MockUserServiceInterface) GetUserShortURLs(userID string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserShortURLs", userID)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserShortURLs indicates an expected call of GetUserShortURLs.
func (mr *MockUserServiceInterfaceMockRecorder) GetUserShortURLs(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserShortURLs", reflect.TypeOf((*MockUserServiceInterface)(nil).GetUserShortURLs), userID)
}
