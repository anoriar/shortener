// Code generated by MockGen. DO NOT EDIT.
// Source: key_gen_interface.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockKeyGenInterface is a mock of KeyGenInterface interface.
type MockKeyGenInterface struct {
	ctrl     *gomock.Controller
	recorder *MockKeyGenInterfaceMockRecorder
}

// MockKeyGenInterfaceMockRecorder is the mock recorder for MockKeyGenInterface.
type MockKeyGenInterfaceMockRecorder struct {
	mock *MockKeyGenInterface
}

// NewMockKeyGenInterface creates a new mock instance.
func NewMockKeyGenInterface(ctrl *gomock.Controller) *MockKeyGenInterface {
	mock := &MockKeyGenInterface{ctrl: ctrl}
	mock.recorder = &MockKeyGenInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeyGenInterface) EXPECT() *MockKeyGenInterfaceMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockKeyGenInterface) Generate() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate")
	ret0, _ := ret[0].(string)
	return ret0
}

// Generate indicates an expected call of Generate.
func (mr *MockKeyGenInterfaceMockRecorder) Generate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockKeyGenInterface)(nil).Generate))
}
